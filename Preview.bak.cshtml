@using UCommerce
@using UCommerce.Api
@using UCommerce.Runtime
@{
    var request = HttpContext.Current.Request;
    var basket = TransactionLibrary.GetBasket().PurchaseOrder;
    bool splitShipments = basket.Shipments.Count()>1;
    var oliNum = Request.QueryString["oli"];

    if (request.HttpMethod == "POST" && request.Form.AllKeys.Any(x => x == "single-order-shipment"))
    {
        splitShipments = false;
        // need to trigger method to assign all the order lines to main shipment address
        uCommerce.Functions.Basket.AssignMainShippingAddressToAll(basket);
    }
    if (request.HttpMethod == "POST" && request.Form.AllKeys.Any(x => x == "split-order-shipment"))
    {
        splitShipments = true;
        //need to enable user so assign orderlines to multiple shipment addresses
    }

    if (request.HttpMethod == "POST" && request.Form.AllKeys.Any(x => x == "send-order"))
    {
        uCommerce.Functions.Basket.AddGiftNote("gift-note", basket);
        // add personal notes to products
        foreach (var ol in basket.OrderLines)
        {
            var keyId = "personalize" + ol.Id.ToString();
            uCommerce.Functions.Basket.PersonalizeProduct(keyId, basket, ol);
        }
        TransactionLibrary.RequestPayments();
        // TransactionLibrary.ExecuteBasketPipeline();
        //   HttpContext.Current.Response.Redirect("Confirmation", false);
        //  HttpContext.Current.ApplicationInstance.CompleteRequest();
        //  return;
        // new RedirectResult("Confirmation");
        return;
    }

    //splitShipments = oliNum != null;

    var currency = basket.BillingCurrency;
    var billingAddress = TransactionLibrary.GetBillingInformation();
    var shipmentAddress = TransactionLibrary.GetShipmentInformation();
    var shipments = basket.Shipments;

    var subTotal = new Money(basket.SubTotal.Value, currency);
    var tax = new Money(basket.VAT.Value, currency);
    var discount = new Money(basket.DiscountTotal.Value, currency);
    var shippingTotal = new Money(basket.ShippingTotal.Value, currency);
    var paymentTotal = new Money(basket.PaymentTotal.Value, currency);
    var orderTotal = new Money(basket.OrderTotal.Value, currency);

    //get GiftText to order
    var giftNote = string.Empty;
    if (basket.GetOrderProperties().Any(p => p.Key == "GiftText"))
    {
        giftNote = basket.GetOrderProperties().First(p => p.Key == "GiftText").Value;
    }

    var rowspan = 3;
    if (discount.Value > 0)
    {
        rowspan++;
    }
    if (shippingTotal.Value > 0)
    {
        rowspan++;
    }
    if (paymentTotal.Value > 0)
    {
        rowspan++;
    }
}
<form method="post" class="row">
    <div class="small-12 columns">
        <div class="page-content-box">
            <div class="row" style="margin-bottom:2rem;">
                <div class="columns small-12 medium-6">
                    <h3>Billing address</h3>
                    <address>
                        @if (!String.IsNullOrWhiteSpace(@billingAddress.CompanyName))
                        {
                            @billingAddress.CompanyName<br />
                        }
                        <strong>@billingAddress.FirstName @billingAddress.LastName</strong><br>
                        @if (!String.IsNullOrWhiteSpace(@billingAddress.Attention))
                        {
                            <text>att. </text> @billingAddress.Attention<br>
                        }
                        @billingAddress.Line1<br>
                        @billingAddress.City , @billingAddress.State @billingAddress.PostalCode <br>
                        @billingAddress.Country.Name<br />

                        Phone: @billingAddress.PhoneNumber<br>
                        Cell: @billingAddress.MobilePhoneNumber<br>
                        Email: <a href="mailto:@billingAddress.EmailAddress">@billingAddress.EmailAddress</a>
                    </address>
                </div>
                <div class="columns small-12 medium-6">
                    <h3>Shipping address</h3>
                    <address>
                        @if (!String.IsNullOrWhiteSpace(@shipmentAddress.CompanyName))
                        {
                            @shipmentAddress.CompanyName<br />
                        }
                        <strong>@shipmentAddress.FirstName @shipmentAddress.LastName</strong><br />
                        @if (!String.IsNullOrWhiteSpace(@shipmentAddress.Attention))
                        {
                            <text>att. </text> @shipmentAddress.Attention<br />
                        }
                        @shipmentAddress.Line1<br>
                        @shipmentAddress.City, @shipmentAddress.State @shipmentAddress.PostalCode <br>
                        @shipmentAddress.Country.Name<br>
                        Phone: @shipmentAddress.PhoneNumber<br>
                        Cell: @shipmentAddress.MobilePhoneNumber<br>
                        Email: <a href="mailto:@shipmentAddress.EmailAddress">@shipmentAddress.EmailAddress</a>
                    </address>
                   
                        @if (splitShipments)
                        {
                            <button name="single-order-shipment" class="right button primary" type="submit">SEND TO ONE ADDRESS <i class="fa fa-angle-right"></i></button>
                        }
                        else
                        {
                            <button name="split-order-shipment" class="right button primary" type="submit">SEND TO MULTIPLE ADDRESSES <i class="fa fa-angle-right"></i></button>
                        }
                 
                </div>
            </div>

            @*DEVNOTE: MODAL TRIGGER MOCKUP - START*@
            @*TIP: You will need to replace "num" with an ID than is unique to the line item (perhaps the SKU information). That way you can activate multiple modals*@
            @*<a href="#modal-num" class="button secondary">SPLIT SHIP ONE (MODAL)</a>
            <a href="#modal2-num" class="button secondary">SPLIT SHIP MULTIPLE (MODAL)</a>*@
            @*END MODAL MOCKUP*@
            <div class="row">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Item no. </th>
                            @if (splitShipments)
                    {
                    <th class="span8">Send To</th>
                    }
                            <th class="span8">Description</th>
                            <th class="span1 money">Price</th>
                            <th class="span1 money">Tax</th>
                            <th class="span1 number">Quantity</th>
                            <th class="span1 money">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var lineItem in basket.OrderLines)
                        {
                            var itemPrice = new Money(lineItem.Price, currency);
                            var itemTax = new Money(lineItem.VAT, currency);
                            var lineTotal = new Money(lineItem.Total.Value, currency);
                            var product = @CatalogLibrary.GetProduct(lineItem.Sku);
                            var shipmentaddress = shipments.FirstOrDefault(s => s.OrderLines.Any(ol => ol.OrderLineId == lineItem.OrderLineId)).ShipmentAddress;
                            var shipmentModalName =  string.Format("?oli={0}#modal{1}-num", lineItem.OrderLineId.ToString(), lineItem.Quantity > 1 ? "2" : "");
                            //var shipmentModalName = string.Format("modal{0}-num", lineItem.Quantity > 1 ? "2" : "");
                <tr>
                    <td>@lineItem.Sku</td>
                    @if (splitShipments)
                        {
                        <td>
                            @Html.Raw(string.Format("<i><b>{0} {1}</b></br>{2},{3}</i></br>{4}",
                                        shipmentaddress.FirstName,
                                        shipmentaddress.LastName,
                                        shipmentaddress.AddressName,
                                        shipmentaddress.City,
                                        "<a name=\"split-order-shipment\" href=\"" + shipmentModalName + "\">Change Address</a>"))
                        </td>
                        }
                    <td>@lineItem.ProductName</td>
                    <td class="money">
                        @if (lineItem.UnitDiscount.HasValue && lineItem.UnitDiscount > 0)
                            {
                                var nowPrice = new Money((lineItem.Price - lineItem.UnitDiscount.Value), currency);
                            <span style="text-decoration: line-through">
                                @itemPrice
                            </span>
                            @nowPrice
                            }
                            else
                            {
                            @itemPrice
                            }
                    </td>
                    <td class="money">@itemTax</td>
                    <td class="number">@lineItem.Quantity</td>
                    <td class="money">@lineTotal</td>
                </tr>
                    if (Boolean.Parse(string.IsNullOrWhiteSpace(product["AllowCustom"].Value) ? "false" : product["AllowCustom"].Value))
                    {
                        var keyId = "personalize" + lineItem.Id.ToString();
                <tr>
                    <td colspan="6" style="padding:.5rem 2rem;">
                        <label>Personalize this product</label>
                        <input class="personalnote" maxlength="24" type="text" name="@keyId" value="@lineItem["PersonalNote"]" />
                    </td>
                </tr>
                    }
                }
                        <tr class="order-line">
                            <td colspan="6">
                                <label>Add a gift note to your order:</label>
                                <textarea name="gift-note" maxlength="100" id="giftnote">@giftNote</textarea>
                            </td>
                        </tr>
                        <tr>
                            <td rowspan="@rowspan" colspan="2"></td>
                            <td colspan="3">Sub total: </td>
                            <td class="money">
                                @subTotal
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3">Tax: </td>
                            <td class="money">
                                @tax
                            </td>
                        </tr>
                        @if (discount.Value > 0)
                {
                <tr>
                    <td colspan="3">Order discounts: </td>
                    <td class="money">@decimal.Round((discount.Value * -1), 2)</td>
                </tr>
                }
                        @if (shippingTotal.Value > 0)
                {
                <tr>
                    <td colspan="3">
                        Shipping
                        @if (shipments.Count > 1)
                            {
                            <ul>
                                @foreach (var shipment in shipments)
                                    {
                                    <li>@shipment.ShipmentName</li>
                                    }
                            </ul>
                            }
                            else
                            {
                            <text> (via @shipments.First().ShipmentName)</text>
                            }
                    </td>
                    <td class="money">@shippingTotal</td>
                </tr>
                }
                        @if (paymentTotal.Value > 0)
                {
                <tr>
                    <td colspan="3">
                        Payment
                        @if (basket.Payments.Count > 1)
                            {
                            <ul>
                                @foreach (var payment in basket.Payments)
                                    {
                                    <li>@payment.PaymentMethodName</li>
                                    }
                            </ul>
                            }
                            else
                            {
                            <text> (@basket.Payments.First().PaymentMethodName)</text>
                            }
                    </td>
                    <td class="money">@paymentTotal</td>
                </tr>
                }
                        <tr>
                            <td colspan="3">Order total: </td>
                            <td class="money">@orderTotal</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="row align-justify">
                <div class="small-6 columns">
                    <a href="~/store/cart/payment" class="button secondary">Back to Payment Method</a>

                </div>
                <div class="small-6 columns text-left medium-text-right">
                    <button name="send-order" class="right button primary" type="submit">Pay and Complete Order <i class="fa fa-angle-right"></i></button>
                </div>
            </div>
        </div>
    </div>
    <!-- The Modal -->
    @*DEVNOTE: MODAL ONE ITEM MOCKUP - START*@
    <div id="modal-num" class="modalDialog ship-modal">
        @*@if(oliNum!=null)
        {
            int oliInt = int.Parse(oliNum);
            var selectedOrderLine = shipments.Select(s => s.OrderLines.FirstOrDefault(ol => ol.OrderLineId == oliInt));
        }*@
        <div>
            <div class="row">
                <div class="small-12 columns">
                    <h2>SEND TO</h2>
                </div>
            </div>
            <div class="row">
                <div class="small-12 medium-3 columns">
                    <p style="margin-bottom:10px;">
                        <img src="http://placehold.it/150x150">
                    </p>
                </div>
                <div class="small-12 medium-9 columns">
                    <p>
                        <span class="sku"><strong>SKU:</strong>XXX000</span><br />
                        <span class="description"><strong>Description:</strong>Stand-up Reagan DVD</span>
                    </p>
                    <span class="quantity"><strong>Quantity: 1</strong></span>
                </div>
            </div>
            <div class="row">
                <div class="small-12 medium-5 columns column-margin-small">
                    <div style="margin-top:10px;">
                        <select>
                            <option selected>First Name, Last Name | Street</option>
                            <option>Add New Address</option>
                        </select>

                    </div>
                    <p><a href="#" class="button primary">Set Address</a></p>
                </div>
            </div>
            @*DEVNOTE If "Add New Address" is selected"*@
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>First Name</label>
                    <input type="text" placeholder="First Name" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>Last Name</label>
                    <input type="text" placeholder="Last Name" class="required" />
                </div>
            </div>
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>Email Address</label>
                    <input type="email" placeholder="Email Address" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>Phone</label>
                    <input type="text" placeholder="Phone" />
                </div>
            </div>
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>Street</label>
                    <input type="text" placeholder="Street" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>City</label>
                    <input type="text" placeholder="City" class="required" />
                </div>
            </div>
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>State</label>
                    <input type="text" placeholder="First Name" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>Country</label>
                    <input type="text" placeholder="Last Name" class="required" />
                </div>
            </div>
            <div class="row">
                <div class="small-12 columns">
                    <a href="#" class="button primary">Save Shipping Address</a>
                </div>
            </div>
            @*END VARIABLE CONTENT*@
            <a href="#close" title="Close" class="close">X</a>
        </div>
    </div>
    @*END MODAL MOCKUP*@
    @*DEVNOTE: MODAL TWO ITEM MOCKUP - START*@
    <div id="modal2-num" class="modalDialog ship-modal">
        <div>
            <div class="row">
                <div class="small-12 columns">
                    <h2>SEND TO</h2>
                </div>
            </div>
            <div class="row">
                <div class="small-12 medium-3 columns">
                    <p style="margin-bottom:10px;">
                        <img src="http://placehold.it/150x150">
                    </p>
                </div>
                <div class="small-12 medium-9 columns">
                    <p>
                        <span class="sku"><strong>SKU:</strong>XXX000</span><br />
                        <span class="description"><strong>Description:</strong>Stand-up Reagan DVD</span>
                    </p>
                    <span class="quantity">
                        <strong>
                            <!--DEVNOTE: If less than the total amount of quantity is chosen, the remaining items should appear below it for additional selection-->
                            Quantity:
                            <select class="quantity-select" style="width:50px;">
                                <option>3</option>
                                <option>2</option>
                                <option>1</option>
                            </select>
                        </strong>
                        <p><em>Adjust your quantity to split the order between addresses.</em></p>
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="small-12 medium-5 columns column-margin-small">
                    <div style="margin-top:10px;">
                        <select>
                            <option selected>First Name, Last Name | Street</option>
                            <option>Add New Address</option>
                        </select>

                    </div>
                    <!--SET ADDRESS APPEARS AT THE BOTTOM SO YOU SET ALL ADDRESSES AT ONCE-->
                    <p><a href="#" class="button primary">Set Address(es)</a></p>
                </div>
            </div>
            @*DEVNOTE If "Add New Address" is selected"*@
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>First Name</label>
                    <input type="text" placeholder="First Name" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>Last Name</label>
                    <input type="text" placeholder="Last Name" class="required" />
                </div>
            </div>
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>Email Address</label>
                    <input type="email" placeholder="Email Address" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>Phone</label>
                    <input type="text" placeholder="Phone" />
                </div>
            </div>
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>Street</label>
                    <input type="text" placeholder="Street" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>City</label>
                    <input type="text" placeholder="City" class="required" />
                </div>
            </div>
            <div class="row control-group">
                <div class="small-12 medium-6 columns">
                    <label>State</label>
                    <input type="text" placeholder="First Name" class="required" />
                </div>
                <div class="small-12 medium-6 columns">
                    <label>Country</label>
                    <input type="text" placeholder="Last Name" class="required" />
                </div>
            </div>
            <div class="row">
                <div class="small-12 columns">
                    <a href="#" class="button primary">Save Shipping Address</a>
                </div>
            </div>
            @*END VARIABLE CONTENT*@
            <a href="#close" title="Close" class="close">X</a>
        </div>
    </div>
    @*END MODAL MOCKUP*@
    <!-- /Modal -->

    @Html.Raw(basket.OrderStatusAudits.ToString())
</form>

<script>
    $(document).ready(function () {
        $("#giftnote").counter({
            count: 'up',
            goal: 100
        });
        $(".personalnote").counter({
            count: 'up',
            goal: 24
        });
    });
</script>