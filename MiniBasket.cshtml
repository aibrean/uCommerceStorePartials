@using UCommerce
@using UCommerce.Api
@using UCommerce.EntitiesV2
@using UCommerce.Runtime

@{
    PurchaseOrder basket = null;
   // PurchaseOrder basket = SiteContext.Current.OrderContext.GetBasket().PurchaseOrder;
    var currency = SiteContext.Current.CatalogContext.CurrentCatalog.PriceGroup.Currency;
    var orderTotal = new Money(0, currency);
    if(TransactionLibrary.HasBasket())
    {
        basket = TransactionLibrary.GetBasket(false).PurchaseOrder;
        if (basket.OrderTotal.HasValue)
        {
            orderTotal = new Money(basket.OrderTotal.Value, currency);
        }
    }
}

    @if(basket == null || !basket.OrderLines.Any())
    {
        <p style="height:100px;">Your Shopping Cart is empty</p>
    }
    else
    {
        <p><i class="fa fa-shopping-cart"></i> @basket.OrderLines.Sum(x => x.Quantity).ToString("#,##") item(s)</p>
        <p class="cart-total">Total: @orderTotal</p>
        <a href="~/store/cart/" class="button hollow secondary expanded">View Cart</a>
    }
